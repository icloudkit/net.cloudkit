
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # $remote_addr 与$http_x_forwarded_for 用以记录客户端的ip地址；
    # $remote_user 客户端用户名称；
    # $time_local 访问时间与时区；
    # $request 请求的url与http协议；
    # $status 请求状态；成功是200，
    # $body_bytes_s ent 发送给客户端文件主体内容大小；
    # $http_referer 从那个页面链接访问过来的；
    # $http_user_agent 客户端浏览器的相关信息；
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        #listen  [::1]:12345;
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

	location / {
	    #root   html;
	    # off
	    #proxy_redirect  default;
	    proxy_set_header  X-Real-IP  $remote_addr;
	    proxy_set_header  REMOTE-HOST $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header  Host  $http_host;

	    client_max_body_size  50m;
            client_body_buffer_size  256k;

            proxy_connect_timeout  30;
            proxy_send_timeout  30;
            proxy_read_timeout  60;
            proxy_buffer_size  256k;
            proxy_buffers  4 256k;
            proxy_busy_buffers_size  256k;
            proxy_temp_file_write_size  256k;
            proxy_next_upstream  error timeout invalid_header http_500 http_503 http_404;
            proxy_max_temp_file_size 128m;

	    #proxy_pass example.com:12345;
	    #proxy_pass unix:/tmp/stream.socket;
	    #proxy_pass http://103.7.200.79;
	    proxy_pass http://127.0.0.1:8080/hypermedia/;
        }

	# Add expires header for static content
        location ~* \.(html|jpg|jpeg|gif|png|swf)$ {
             if (-f $request_filename) {
                 root html/hypermedia;
                 expires            1d;
                 break;
             }
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    

}


------------------------------------------------------------------------------------------------------------------------
1、配置 Nginx SSL 模块：
$ ./configure --user=username --group=groupname --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module
$ make && make install

2、修改 Nginx 配置

# HTTPS server
#
#server {
#    listen       443 ssl;
#    server_name  localhost;

#    #ssl on;

#    ssl_certificate      /tmp/cert.pem;
#    ssl_certificate_key  /tmp/cert.key;

#    ssl_session_cache    shared:SSL:1m;
#    ssl_session_timeout  5m;

#    #ssl_protocols SSLv2 SSLv3 TLSv1;
#    ssl_ciphers  HIGH:!aNULL:!MD5;
#    #ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
#    ssl_prefer_server_ciphers  on;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}