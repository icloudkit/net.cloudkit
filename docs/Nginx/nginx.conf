
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    # Max value 16384
    worker_connections  8192;
    # Accept multiple connections
    multi_accept on;
}

# settings that affect all server blocks
http {
    #include upstream.conf;
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # parametrization using hostname of access and log filenames
    #
    access_log  logs/access.log  main;
    #error_log   logs/error.log error;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        # IPv6
        #listen [::]:80 default_server ipv6only=on;
        # IPv4
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        charset utf-8;

        access_log  logs/host.access.log  main;

        # Root and index files.
        #
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        # if no favicon exists return a 204 (no content error).
        #
        location = /favicon.ico {
            try_files $uri =204;
            log_not_found off;
            access_log off;
        }

        # don't log robots.txt requests
        #
        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        ##    fastcgi_pass   upstream
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

	location / {
	    proxy_redirect              off;
	    proxy_set_header            X-Real-IP $remote_addr;
	    proxy_set_header            REMOTE-HOST $remote_addr;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            Host $http_host;

	    client_max_body_size        50m;
            client_body_buffer_size     256k;

            proxy_connect_timeout       30;
            proxy_send_timeout          30;
            proxy_read_timeout          60;
            proxy_buffer_size           256k;
            proxy_buffers               4 256k;
            proxy_busy_buffers_size     256k;
            proxy_temp_file_write_size  256k;
            proxy_next_upstream         error timeout invalid_header http_500 http_503 http_404;
            proxy_max_temp_file_size    128m;

	    # proxy_pass                 example.com:12345;
	    # proxy_pass                 unix:/tmp/stream.socket;
	    proxy_pass                  http://127.0.0.1:8080/;
        }

        # Add expires header for static content
        location ~* \.(html|jpg|jpeg|gif|png|swf)$ {
             if (-f $request_filename) {
                 root  html;
                 expires  1d;
                 break;
             }
        }

        # 图片缓存时间设置
        #location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$ {
        #    expires  10d;
        #}

        # JS和CSS缓存时间设置
        #location ~ .*.(js|css)?$ {
        #    expires  1h;
        #}

        # static files
        #
        location ~* \.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
            expires max;
            log_not_found off;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
            ## Set the OS file cache.
            open_file_cache max=1000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
        }

        # Keep a tab on the 'big' static files
        #
        location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
            expires 30d;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        listen       443 ssl http2;
        server_name  localhost;

	    #access_log    logs/access.log main;
        #error_log     logs/error.log error;

        ssl_certificate      cert.pem;
        ssl_certificate_key  cert_key.pem;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1 SSLv3;
        #ssl_ciphers  HIGH:!aNULL:!MD5;
	    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AES:RSA+3DES:!ADH:!AECDH:!MD5:!DSS;
        ssl_prefer_server_ciphers  on;

        # Root and index files
        location / {
            root   html;
            index  index.html index.htm;
        }
    }

}
